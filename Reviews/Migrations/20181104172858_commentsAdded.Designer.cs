// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reviews.Models;

namespace Reviews.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20181104172858_commentsAdded")]
    partial class commentsAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reviews.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = 1, Name = "Acoustic-Electric" },
                        new { Id = 2, Name = "Electric" }
                    );
                });

            modelBuilder.Entity("Reviews.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("ReviewId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.ToTable("Comment");

                    b.HasData(
                        new { Id = 1, CreatedAt = new DateTime(2018, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), ReviewId = 3, Text = "Funny Comment" }
                    );
                });

            modelBuilder.Entity("Reviews.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Content");

                    b.Property<string>("ImageURL");

                    b.Property<string>("ReviewCategory");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new { Id = 1, CategoryId = 1, Content = "Fender's FA-125 is a visually stunning entry-level guitar with a budget-friendly price. It has a quality laminate spruce and basswood construction with a modern Fender 3+3 headstock and stylish Viking bridge which combine to create an easy-playing instrument that sounds great. Beginners and developing players will appreciate this guitar, which includes a mahogany neck to gives the guitar lively tone and a smooth playing feel.", ImageURL = "https://media.guitarcenter.com/is/image/MMGS7/FA-125-Dreadnought-Acoustic-Guitar-Natural/L18556000001000-00-500x500.jpg", Title = "Fender FA-125" },
                        new { Id = 2, CategoryId = 1, Content = "Acoustic electric guitar with select spruce top and mahogany back and sides. Mahogany neck. The V70CE is equipped with a soft cutaway for higher access. It is a very responsive instrument with capacity for great dynamic range both acoustically and through the output.", ImageURL = "https://media.guitarcenter.com/is/image/MMGS7/V70CE-Acoustic-Electric-Guitar-Transparent-Blue/519468000012000-00-500x500.jpg", Title = "Ibanez V70CE" },
                        new { Id = 3, CategoryId = 1, Content = "Yamaha's F335 gives you that classic dreadnought shape and sound at a price point that won't break your bank. The F335's tonewood combination includes a laminate spruce top, rosewood fingerboard and bridge, and meranti back and sides. Gold die-cast tuners provide smooth and accurate tuning while a tortoiseshell pickguard gives a bit more style. Case sold separately.", ImageURL = "https://media.guitarcenter.com/is/image/MMGS7/F335-Acoustic-Guitar-Black/512940000001000-00-500x500.jpg", Title = "Yamaha F335" },
                        new { Id = 4, CategoryId = 2, Content = "The JIVA10 is based on the Ibanez S series and features Nita’s own personal touches, such as her signature 'Pandemonium' pickups by DiMarzio in a versatile HSH configuration. Triggered by a 5-way selector switch, these pickups deliver an amazing array of tones while a well-placed master volume control lets you make rapid adjustments with ease. For the best performance in a tremolo, Nita choose the Ibanez Edge Zero II bridge. With its sleek and comfortable, low-profile design and stud lock function for superior tuning stability you'll be able to express every aspect of your musical personality. It all adds up to a pro-level playing experience for anyone with the courage to go all the way. ", ImageURL = "https://media.guitarcenter.com/is/image/MMGS7/Nita-Strauss-JIVA10-Signature-Electric-Guitar-Deep-Space-Blonde/L19851000001000-00-500x500.jpg", Title = "Ibanez Nita Strauss JIVA10" }
                    );
                });

            modelBuilder.Entity("Reviews.Models.Comment", b =>
                {
                    b.HasOne("Reviews.Models.Review")
                        .WithMany("Comments")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Reviews.Models.Review", b =>
                {
                    b.HasOne("Reviews.Models.Category", "Category")
                        .WithMany("Reviews")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
